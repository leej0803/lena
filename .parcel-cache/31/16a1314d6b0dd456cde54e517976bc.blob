var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "throwWarning", function () {
  return throwWarning;
});
_parcelHelpers.export(exports, "throwError", function () {
  return throwError;
});
_parcelHelpers.export(exports, "generateUUID", function () {
  return generateUUID;
});
_parcelHelpers.export(exports, "isPowerOf2", function () {
  return isPowerOf2;
});
_parcelHelpers.export(exports, "lerp", function () {
  return lerp;
});
/***
Throw a console warning with the passed arguments
***/
let warningThrown = 0;
function throwWarning() {
  if (warningThrown > 100) {
    return;
  } else if (warningThrown === 100) {
    console.warn("Curtains: too many warnings thrown, stop logging.");
  } else {
    const args = Array.prototype.slice.call(arguments);
    console.warn.apply(console, args);
  }
  warningThrown++;
}
function throwError() {
  const args = Array.prototype.slice.call(arguments);
  console.error.apply(console, args);
}
function generateUUID() {
  return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx').replace(/[xy]/g, c => {
    let r = Math.random() * 16 | 0, v = c === 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16).toUpperCase();
  });
}
function isPowerOf2(value) {
  return (value & value - 1) === 0;
}
function lerp(start, end, amount) {
  return (1 - amount) * start + amount * end;
}
