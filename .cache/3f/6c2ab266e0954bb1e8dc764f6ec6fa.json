{"id":"shaders_circle/fragment.glsl","dependencies":[{"name":"/Users/jlb_1028/Documents/GitHub/lena/package.json","includedInParent":true,"mtime":1626632437455}],"generated":{"js":"module.exports = \"precision mediump float;\\n#define GLSLIFY 1\\n\\n\\n   varying vec3 vVertexPosition;\\n   varying vec2 vTextureCoord;\\n   varying vec2 vFirstTextureCoord;\\n   varying vec2 vSecondTextureCoord;\\n\\n   // custom uniforms\\n   uniform float uTransitionTimer;\\n   uniform float uTimer;\\n   uniform float uTo;\\n   uniform float uFrom;\\n\\n   // our textures samplers\\n   uniform sampler2D firstTexture;\\n   uniform sampler2D secondTexture;\\n   uniform sampler2D thirdTexture;\\n   uniform sampler2D displacement;\\n\\n    vec4 getTextureByIndex(float index, vec2 vUv){\\n        vec4 result;\\n        if(index==0.){\\n            result = texture2D(firstTexture,vUv);\\n        }\\n        if(index==1.){\\n            result = texture2D(secondTexture,vUv);\\n        }\\n        if(index==2.){\\n            result = texture2D(thirdTexture,vUv);\\n        }\\n        return result;\\n    }\\n    float circle (in vec2 uv, in float radius, in float sharpness) {\\n        float dist = length(uv - vec2(0.5));\\n        return 1. - smoothstep(radius-sharpness,radius,dist);\\n    }\\n   void main() {\\n       float progress = fract(uTransitionTimer);\\n\\n       vec2 center = vec2(0.5);\\n       vec2 centerVector = vFirstTextureCoord - center;\\n       vec2 vUv = vFirstTextureCoord;\\n\\n        float circleProgress = circle(vTextureCoord, progress*0.9, 0.2);\\n        float ease = progress*(2. - progress);\\n        vec2 nextUV = vUv + centerVector * (circleProgress - 1.0) + centerVector * ( 1. - ease) * 0.;\\n        vec2 currentUV = vUv - centerVector * circleProgress*0.5 - centerVector * progress * 0.2;\\n\\n        float currentTexture = mod(uFrom,3.);\\n        float nextTexture =  mod(uTo, 3.);\\n\\n        vec4 current = getTextureByIndex(currentTexture, currentUV);\\n        vec4 next = getTextureByIndex(nextTexture, nextUV);\\n        \\n        gl_FragColor = mix(current,next,circleProgress);\\n   }\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1895},"source":"shaders_circle/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"shaders_circle/fragment.glsl":"module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\n\\n   varying vec3 vVertexPosition;\\n   varying vec2 vTextureCoord;\\n   varying vec2 vFirstTextureCoord;\\n   varying vec2 vSecondTextureCoord;\\n\\n   // custom uniforms\\n   uniform float uTransitionTimer;\\n   uniform float uTimer;\\n   uniform float uTo;\\n   uniform float uFrom;\\n\\n   // our textures samplers\\n   uniform sampler2D firstTexture;\\n   uniform sampler2D secondTexture;\\n   uniform sampler2D thirdTexture;\\n   uniform sampler2D displacement;\\n\\n    vec4 getTextureByIndex(float index, vec2 vUv){\\n        vec4 result;\\n        if(index==0.){\\n            result = texture2D(firstTexture,vUv);\\n        }\\n        if(index==1.){\\n            result = texture2D(secondTexture,vUv);\\n        }\\n        if(index==2.){\\n            result = texture2D(thirdTexture,vUv);\\n        }\\n        return result;\\n    }\\n    float circle (in vec2 uv, in float radius, in float sharpness) {\\n        float dist = length(uv - vec2(0.5));\\n        return 1. - smoothstep(radius-sharpness,radius,dist);\\n    }\\n   void main() {\\n       float progress = fract(uTransitionTimer);\\n\\n       vec2 center = vec2(0.5);\\n       vec2 centerVector = vFirstTextureCoord - center;\\n       vec2 vUv = vFirstTextureCoord;\\n\\n        float circleProgress = circle(vTextureCoord, progress*0.9, 0.2);\\n        float ease = progress*(2. - progress);\\n        vec2 nextUV = vUv + centerVector * (circleProgress - 1.0) + centerVector * ( 1. - ease) * 0.;\\n        vec2 currentUV = vUv - centerVector * circleProgress*0.5 - centerVector * progress * 0.2;\\n\\n        float currentTexture = mod(uFrom,3.);\\n        float nextTexture =  mod(uTo, 3.);\\n\\n        vec4 current = getTextureByIndex(currentTexture, currentUV);\\n        vec4 next = getTextureByIndex(nextTexture, nextUV);\\n        \\n        gl_FragColor = mix(current,next,circleProgress);\\n   }\";"},"lineCount":null}},"error":null,"hash":"f8617ed939ea08f90a8370aefd41b9e3","cacheData":{"env":{}}}