{"id":"index4.html","dependencies":[{"name":"./favicon.ico","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/favicon.ico","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./css/style.css","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/css/style.css","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./index.html","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/index.html","entry":true,"parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./index2.html","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/index2.html","entry":true,"parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./index3.html","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/index3.html","entry":true,"parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./index4.html","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/index4.html","entry":true,"parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./index5.html","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/index5.html","entry":true,"parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./videos/7.mp4","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/videos/7.mp4","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./videos/5.mp4","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/videos/5.mp4","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./videos/6.mp4","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/videos/6.mp4","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"./js/app.js","dynamic":true,"resolved":"/Users/jlb_1028/Documents/GitHub/lena/js/app.js","parent":"/Users/jlb_1028/Documents/GitHub/lena/index4.html"},{"name":"/Users/jlb_1028/Documents/GitHub/lena/package.json","includedInParent":true,"mtime":1626632437455}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\" class=\"no-js\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n        <title>WebGL Video Transitions | Demo 4 | Codrops</title>\n        <meta name=\"description\" content=\"Some WebGL video transitions with different effects using curtains.js\">\n        <meta name=\"keywords\" content=\"curtains.js, webgl, video transition, animation, shader, javascript, web design\">\n        <meta name=\"author\" content=\"Codrops\">\n        <link rel=\"shortcut icon\" href=\"/8af3a74ede48e250ceb935c026242483.ico\">\n        <link rel=\"stylesheet\" href=\"https://use.typekit.net/ylw1llk.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/6a6a912d0c7b55b537768da778032849.css\">\n        <script>document.documentElement.className = \"js\";\n\nvar supportsCssVars = function supportsCssVars() {\n  var e,\n      t = document.createElement(\"style\");\n  return t.innerHTML = \"root: { --tmp-var: bold; }\", document.head.appendChild(t), e = !!(window.CSS && window.CSS.supports && window.CSS.supports(\"font-weight\", \"var(--tmp-var)\")), t.parentNode.removeChild(t), e;\n};\n\nsupportsCssVars() || alert(\"Please view this demo in a modern browser that supports CSS Variables.\");</script>\n    </head>\n    <body class=\"demo-4\">\n        <main>\n            <div class=\"frame\">\n                <h1 class=\"frame__title\">WebGL Video Transitions with <a href=\"https://www.curtainsjs.com/\">curtains.js</a></h1>\n                <nav class=\"frame__links\">\n                    <a href=\"https://tympanus.net/Tutorials/Mirrors/\">Previous demo</a>\n                    <a href=\"https://tympanus.net/codrops/?p=51333\">Article</a>\n                    <a href=\"https://github.com/akella/videoTransitions\">GitHub</a>\n                </nav>\n                <nav class=\"frame__demos\">\n                    <span class=\"frame__demos-text\">More demos: </span>\n                    <a href=\"/eacf331f0ffc35d4b482f1d15a887d3b.html\" class=\"frame__demo\">1</a>\n                    <a href=\"/dc1b78e65d07ed251e83c4ec7803b847.html\" class=\"frame__demo\">2</a>\n                    <a href=\"/616f08828268a8ceb04d02b96a7a7f98.html\" class=\"frame__demo\">3</a>\n                    <a href=\"/f4277daffcd6203d1713ab9fa0cc924c.html\" class=\"frame__demo frame__demo--current\">4</a>\n                    <a href=\"/ca0f9de45f4ab6e4ed3c26c3ffdf43aa.html\" class=\"frame__demo\">5</a>\n                </nav>\n                <button class=\"frame__button\" id=\"intro\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" width=\"60\" height=\"60\"><path d=\"M45.563 29.174l-22-15A1 1 0 0022 15v30a.999.999 0 001.563.826l22-15a1 1 0 000-1.652zM24 43.107V16.893L43.225 30 24 43.107z\"></path><path d=\"M30 0C13.458 0 0 13.458 0 30s13.458 30 30 30 30-13.458 30-30S46.542 0 30 0zm0 58C14.561 58 2 45.439 2 30S14.561 2 30 2s28 12.561 28 28-12.561 28-28 28z\"></path></svg></button>\n                <div class=\"frame__content\">\n                    <h2 class=\"frame__content-title\">Unpretentious</h2>\n                    <p class=\"frame__content-text\">Select another video here:</p>\n                    <nav class=\"frame__switch\" id=\"nav\">\n                        <a class=\"frame__switch-item js-nav\" data-nav=\"0\">Wake up</a>\n                        <a class=\"frame__switch-item js-nav\" data-nav=\"1\">Rejoice</a>\n                        <a class=\"frame__switch-item js-nav\" data-nav=\"2\">Breathe</a>\n                    </nav>\n                </div>\n            </div>\n            <div class=\"video\">\n                <div id=\"canvas\"></div>\n                <div class=\"wrapper\">\n                    <div class=\"plane\" data-duration=\"1\">\n                        <video playsinline=\"\" muted=\"\" src=\"/a40715c55ebd595007b63f07b7b4aec4.mp4\" data-sampler=\"firstTexture\" preload=\"auto\"></video>\n                        <video playsinline=\"\" muted=\"\" src=\"/343a5ea39c5418dc056b12fee1595429.mp4\" data-sampler=\"secondTexture\"></video>\n                        <video playsinline=\"\" muted=\"\" src=\"/bf93cb8013dc93d4af1791a83c3adfd2.mp4\" data-sampler=\"thirdTexture\"></video>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script id=\"vert\" type=\"text\">precision mediump float;\n\n            // default mandatory variables\n            attribute vec3 aVertexPosition;\n            attribute vec2 aTextureCoord;\n\n            uniform mat4 uMVMatrix;\n            uniform mat4 uPMatrix;\n\n            // our texture matrices\n            // displacement texture does not need to use them\n            uniform mat4 firstTextureMatrix;\n            uniform mat4 secondTextureMatrix;\n\n            // custom variables\n            varying vec3 vVertexPosition;\n            varying vec2 vTextureCoord;\n            varying vec2 vFirstTextureCoord;\n            varying vec2 vSecondTextureCoord;\n\n            // custom uniforms\n            uniform float uTransitionTimer;\n\n            void main() {\n                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n\n                // varyings\n                // use original texture coords for our displacement\n                vTextureCoord = aTextureCoord;\n                // use texture matrices for our videos\n                vFirstTextureCoord = (firstTextureMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;\n                vSecondTextureCoord = (secondTextureMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;\n                vVertexPosition = aVertexPosition;\n            }\n        </script>\n        <script id=\"frag\" type=\"text\">precision mediump float;\n\n            // Linear interpolate center across center half of the image\n            // Transition from https://gl-transitions.com/editor/CrossZoom\n            // License: MIT\n            // Author: rectalogic\n            // ported by gre from https://gist.github.com/rectalogic/b86b90161503a0023231\n\n            // Converted from https://github.com/rectalogic/rendermix-basic-effects/blob/master/assets/com/rendermix/CrossZoom/CrossZoom.frag\n            // Which is based on https://github.com/evanw/glfx.js/blob/master/src/filters/blur/zoomblur.js\n            // With additional easing functions from https://github.com/rectalogic/rendermix-basic-effects/blob/master/assets/com/rendermix/Easing/Easing.glsllib\n\n            precision mediump float;\n\n            varying vec3 vVertexPosition;\n            varying vec2 vTextureCoord;\n            varying vec2 vFirstTextureCoord;\n            varying vec2 vSecondTextureCoord;\n\n            // custom uniforms\n            uniform float uTransitionTimer;\n            uniform float uTimer;\n            uniform float uTo;\n            uniform float uFrom;\n            uniform float uFadeIn;\n\n            // our textures samplers\n            // notice how it matches our data-sampler attributes\n            uniform sampler2D firstTexture;\n            uniform sampler2D secondTexture;\n            uniform sampler2D thirdTexture;\n            uniform sampler2D displacement;\n\n            float strength = 0.4; // = 0.4\n\n            const float PI = 3.141592653589793;\n\n            float Linear_ease(in float begin, in float change, in float duration, in float time) {\n                return change * time / duration + begin;\n            }\n\n            float Exponential_easeInOut(in float begin, in float change, in float duration, in float time) {\n                if (time == 0.0)\n                    return begin;\n                else if (time == duration)\n                    return begin + change;\n                time = time / (duration / 2.0);\n                if (time < 1.0)\n                    return change / 2.0 * pow(2.0, 10.0 * (time - 1.0)) + begin;\n                return change / 2.0 * (-pow(2.0, -10.0 * (time - 1.0)) + 2.0) + begin;\n            }\n\n            float Sinusoidal_easeInOut(in float begin, in float change, in float duration, in float time) {\n                return -change / 2.0 * (cos(PI * time / duration) - 1.0) + begin;\n            }\n\n            float rand (vec2 co) {\n              return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n            }\n\n\n\n            vec4 getTextureByIndex(float index, vec2 vUv){\n                vec4 result;\n                if(index==0.){\n                    result = texture2D(firstTexture,vUv);\n                }\n                if(index==1.){\n                    result = texture2D(secondTexture,vUv);\n                }\n                if(index==2.){\n                    result = texture2D(thirdTexture,vUv);\n                }\n                return result;\n            }\n            vec3 crossFade(in vec2 uv, in float dissolve, in float t1,in  float t2) {\n                return mix(getTextureByIndex(t1,uv).rgb, getTextureByIndex(t2,uv).rgb, dissolve);\n            }\n            void main() {\n\n                float progress = fract(uTransitionTimer);\n                float currentTexture = uFrom;\n                float nextTexture =  uTo;\n\n                vec4 current = getTextureByIndex(uFrom, vFirstTextureCoord);\n                vec4 next = getTextureByIndex(uTo, vFirstTextureCoord);\n                float mask = step(vTextureCoord.y,uFadeIn);\n\n\n                vec2 center = vec2(Linear_ease(0.25, 0.5, 1.0, progress), 0.5);\n                float dissolve = Exponential_easeInOut(0.0, 1.0, 1.0, progress);\n\n                // Mirrored sinusoidal loop. 0->strength then strength->0\n                float strength = Sinusoidal_easeInOut(0.0, strength, 0.5, progress);\n\n                vec3 color = vec3(0.0);\n                float total = 0.0;\n                vec2 toCenter = center - vFirstTextureCoord;\n\n                /* randomize the lookup values to hide the fixed number of samples */\n                float offset = rand(vFirstTextureCoord);\n\n                for (float t = 0.0; t <= 40.0; t++) {\n                    float percent = (t + offset) / 40.0;\n                    float weight = 4.0 * (percent - percent * percent);\n                    color += crossFade(vFirstTextureCoord + toCenter * percent * strength, dissolve, currentTexture,nextTexture) * weight;\n                    total += weight;\n                }\n\n                gl_FragColor = vec4(color / total, 1.0);\n                gl_FragColor = mix(vec4(0.,0.,0.,0),gl_FragColor, mask);\n            }\n        </script>\n\t\t<script src=\"/41d794d24ff042b1f9ac211fc3f9f951.js\"></script>\n\t</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"ceb75ad15326c670ef9b083c24afb2ef","cacheData":{"env":{}}}